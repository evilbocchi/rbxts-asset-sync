name: Build and Release

on:
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.0.0)'
        required: true
        default: ''
      run_build:
        description: 'Run build process'
        type: boolean
        default: true
      create_release:
        description: 'Create GitHub Release'
        type: boolean
        default: true
  
  # Optionally trigger on pushes to specific branches (commented out by default)
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    # Set permissions needed for creating releases
    permissions:
      contents: write
      
    # Set outputs for later use
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
      
    - name: Get version from package.json
      id: get-version
      if: github.event_name == 'push'
      shell: bash
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Build project
      if: ${{ github.event_name == 'push' || inputs.run_build }}
      run: npm run build

    - name: Create build artifact directory
      run: mkdir -p build-artifacts

    - name: Set release version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          echo "release_version=${{ steps.get-version.outputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "release_version=${{ github.event.inputs.version || 'latest' }}" >> $GITHUB_OUTPUT
        fi

    - name: Package project files
      run: |
        # Create a zip file with all necessary files
        zip -r build-artifacts/rbxts-asset-sync-${{ steps.version.outputs.release_version }}.zip \
          dist/ \
          assets/ \
          README.md \
          LICENSE

    # Create a GitHub Release with the artifacts
    - name: Create GitHub Release
      if: ${{ github.event_name == 'push' || inputs.create_release }}
      uses: softprops/action-gh-release@v1
      with:
        files: build-artifacts/rbxts-asset-sync-${{ steps.version.outputs.release_version }}.zip
        tag_name: v${{ steps.version.outputs.release_version }}
        name: Release v${{ steps.version.outputs.release_version }}
        body: |
          # Release v${{ steps.version.outputs.release_version }}
          
          This release was automatically generated by GitHub Actions.
          
          ## Changes
          
          _Please manually update this section with the relevant changes._
        draft: true
        prerelease: false
        token: ${{ github.token }}
